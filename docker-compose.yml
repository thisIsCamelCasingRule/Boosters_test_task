version: "3.8"
services:
  app:
    restart: on-failure
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_started
    networks:
      - fullstack

  postgres:
    restart: always
    image: postgres:14-alpine
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=posts
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres", "-d", "config" ]
      interval: 15s
      timeout: 20s
      retries: 5
      start_period: 5s
    networks:
      - fullstack

  migrate:
    image: migrate/migrate:v4.15.2
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./pkg/database/migration:/migration
    entrypoint:
      [
          "migrate",
          "-path",
          "/migration",
          "-database",
          "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:/${POSTGRES_DB}?sslmode=disable",
      ]
    command: [ "up" ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fullstack
volumes:
  db_data:
networks:
  fullstack: